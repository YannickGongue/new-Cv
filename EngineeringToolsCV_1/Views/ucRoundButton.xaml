<UserControl x:Class="EngineeringToolsCV_1.Views.ucRoundButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EngineeringToolsCV_1.Views"
             xmlns:Icon="clr-namespace:EngineeringToolsCV_1"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="internalRoundButton" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Button Style="{StaticResource internalRoundButton}"
            Content="{Binding Content,RelativeSource={RelativeSource AncestorType={x:Type local:ucRoundButton}}}"
            Background="{Binding Background,RelativeSource={RelativeSource AncestorType={x:Type local:ucRoundButton}}}" 
            BorderBrush="{Binding ElementName=roundControl,Path=BorderBrush}"
            BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType={x:Type local:ucRoundButton}}}"
            Command="{Binding Command,RelativeSource={RelativeSource AncestorType={x:Type local:ucRoundButton}}}"
            CommandParameter="{Binding CommandParameter,RelativeSource={RelativeSource AncestorType={x:Type local:ucRoundButton}}}"
            Click="Button_Click" Cursor="Hand">
        <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
                <!-- USE A BORDER, TO HAVE CORNER RADIUS-->
                <Border CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ucRoundButton}}}" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <!--For the content itself, use a content presenter (Content presenter is nothing but a framework element which will display the "Content" property of the templated parent, if it contains a property by name "Content". Since button has content, we can directly use a content present. We can also use other elements like textblock to display.-->
                    <!--<TextBlock Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Content" Value="Done"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Button.Template>
    </Button>
    
</UserControl>
